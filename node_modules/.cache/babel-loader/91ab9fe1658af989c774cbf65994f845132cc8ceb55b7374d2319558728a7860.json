{"ast":null,"code":"var _jsxFileName = \"/home/abdullah/Documents/zakat development area/\\u0645\\u0634\\u0631\\u0648\\u0639 \\u0627\\u0644\\u0644\\u062C\\u0627\\u0646 \\u0627\\u0644\\u0645\\u062C\\u062A\\u0645\\u0639\\u064A\\u0629/zakat-react-app/src/components/dashboard/Users.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Link from \"@mui/material/Link\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Title from \"./Title\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as accountActions from \"../../redux/actions/accountActions\";\nimport Button from \"@mui/material/Button\";\nimport { listUsers, deleteUser } from '../service/UserService.js';\nimport { useNavigate } from 'react-router-dom';\nimport alertify from \"alertifyjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction preventDefault(event) {\n  event.preventDefault();\n}\nfunction Accounts(props) {\n  _s();\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  function dateFormatter(dateArray) {\n    const year = dateArray[0];\n    const month = dateArray[1];\n    const day = dateArray[2];\n    return year + \" : \" + month + \" : \" + day;\n  }\n  const navigate = useNavigate();\n  const [user, setUser] = useState([]);\n  useEffect(() => {\n    getAllUser();\n  }, []);\n  function getAllUser() {\n    listUsers().then(response => {\n      alertify.success(\" succesfull.\");\n      setUser(response.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n}\n_s(Accounts, \"2pKevToBQniS3Mt0VW+7cDwgSRI=\", false, function () {\n  return [useNavigate];\n});\n_c = Accounts;\nexport default Accounts;\nvar _c;\n$RefreshReg$(_c, \"Accounts\");","map":{"version":3,"names":["React","Link","Table","TableBody","TableCell","TableHead","TableRow","Title","axios","useEffect","useState","connect","bindActionCreators","accountActions","Button","listUsers","deleteUser","useNavigate","alertify","jsxDEV","_jsxDEV","preventDefault","event","Accounts","props","_s","isFormOpen","setIsFormOpen","dateFormatter","dateArray","year","month","day","navigate","user","setUser","getAllUser","then","response","success","data","catch","error","console","Dashboard","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/abdullah/Documents/zakat development area/مشروع اللجان المجتمعية/zakat-react-app/src/components/dashboard/Users.js"],"sourcesContent":["import * as React from \"react\";\nimport Link from \"@mui/material/Link\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Title from \"./Title\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as accountActions from \"../../redux/actions/accountActions\";\nimport Button from \"@mui/material/Button\";\nimport { listUsers, deleteUser } from '../service/UserService.js'\nimport { useNavigate } from 'react-router-dom'\nimport alertify from \"alertifyjs\";\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nfunction Accounts(props) {\n  const [isFormOpen, setIsFormOpen] = useState(false);\n\n\n  function dateFormatter(dateArray) {\n    const year = dateArray[0];\n    const month = dateArray[1];\n    const day = dateArray[2];\n\n    return year + \" : \" + month + \" : \" + day;\n  }\n\n\n  const navigate = useNavigate();\n\n    const [user, setUser] = useState([])\n\n    useEffect(() => {\n      getAllUser()\n    }, [])\n\n    function getAllUser() {\n      listUsers().then((response) => {\n    alertify.success(\" succesfull.\");\n\n    setUser(response.data)\n        }).catch(error => {\n  \n            console.error(error);\n        })\n    }\n  return (\n  <Dashboard></Dashboard>\n   \n  );\n}\n\n\nexport default Accounts;\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,kBAAkB,QAAQ,OAAO;AAC1C,OAAO,KAAKC,cAAc,MAAM,oCAAoC;AACpE,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,SAAS,EAAEC,UAAU,QAAQ,2BAA2B;AACjE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,cAAcA,CAACC,KAAK,EAAE;EAC7BA,KAAK,CAACD,cAAc,CAAC,CAAC;AACxB;AAEA,SAASE,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAGnD,SAASkB,aAAaA,CAACC,SAAS,EAAE;IAChC,MAAMC,IAAI,GAAGD,SAAS,CAAC,CAAC,CAAC;IACzB,MAAME,KAAK,GAAGF,SAAS,CAAC,CAAC,CAAC;IAC1B,MAAMG,GAAG,GAAGH,SAAS,CAAC,CAAC,CAAC;IAExB,OAAOC,IAAI,GAAG,KAAK,GAAGC,KAAK,GAAG,KAAK,GAAGC,GAAG;EAC3C;EAGA,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAE5B,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd2B,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,SAASA,UAAUA,CAAA,EAAG;IACpBrB,SAAS,CAAC,CAAC,CAACsB,IAAI,CAAEC,QAAQ,IAAK;MACjCpB,QAAQ,CAACqB,OAAO,CAAC,cAAc,CAAC;MAEhCJ,OAAO,CAACG,QAAQ,CAACE,IAAI,CAAC;IAClB,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAI;MAEdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB,CAAC,CAAC;EACN;EACF,oBACAtB,OAAA,CAACwB,SAAS;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAY,CAAC;AAGzB;AAACvB,EAAA,CAnCQF,QAAQ;EAAA,QAaEN,WAAW;AAAA;AAAAgC,EAAA,GAbrB1B,QAAQ;AAsCjB,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
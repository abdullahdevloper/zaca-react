{"ast":null,"code":"var _jsxFileName = \"/home/abdullah/Documents/zakat development area/\\u0645\\u0634\\u0631\\u0648\\u0639 \\u0627\\u0644\\u0644\\u062C\\u0627\\u0646 \\u0627\\u0644\\u0645\\u062C\\u062A\\u0645\\u0639\\u064A\\u0629/zakat-react-app/src/components/dashboard/TotalAccountBalance.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\nimport Title from './Title';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as accountActions from \"../../redux/actions/accountActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction preventDefault(event) {\n  event.preventDefault();\n}\nfunction TotalAccountBalance(props) {\n  _s();\n  const [currentDate, setCurrentDate] = useState(\"\");\n  useEffect(() => {\n    props.actions.getTotalBalance();\n\n    // Güncel tarih\n    const now = new Date();\n    const formattedDate = `${now.getDate()} ${now.toLocaleString('default', {\n      month: 'long'\n    })}, ${now.getFullYear()}`;\n    setCurrentDate(formattedDate);\n  }, [props.actions]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Total Account Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      component: \"p\",\n      variant: \"h4\",\n      children: props.totalBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"text.secondary\",\n      sx: {\n        flex: 1\n      },\n      children: [\"on \", currentDate]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        color: \"primary\",\n        href: \"#\",\n        onClick: preventDefault,\n        children: \"View balance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(TotalAccountBalance, \"BlF1P9kHxwd6vvsk9Ng4ZnXK298=\");\n_c = TotalAccountBalance;\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      getTotalBalance: bindActionCreators(accountActions.getTotalBalance, dispatch)\n    }\n  };\n}\nfunction mapStateToProps(state) {\n  return {\n    totalBalance: state.totalBalanceReducer\n  };\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TotalAccountBalance);\nvar _c;\n$RefreshReg$(_c, \"TotalAccountBalance\");","map":{"version":3,"names":["React","Link","Typography","Title","axios","useEffect","useState","connect","bindActionCreators","accountActions","jsxDEV","_jsxDEV","preventDefault","event","TotalAccountBalance","props","_s","currentDate","setCurrentDate","actions","getTotalBalance","now","Date","formattedDate","getDate","toLocaleString","month","getFullYear","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","component","variant","totalBalance","color","sx","flex","href","onClick","_c","mapDispatchToProps","dispatch","mapStateToProps","state","totalBalanceReducer","$RefreshReg$"],"sources":["/home/abdullah/Documents/zakat development area/مشروع اللجان المجتمعية/zakat-react-app/src/components/dashboard/TotalAccountBalance.js"],"sourcesContent":["import * as React from 'react';\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\nimport Title from './Title';\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport * as accountActions from \"../../redux/actions/accountActions\";\n\nfunction preventDefault(event) {\n  event.preventDefault();\n}\n\nfunction TotalAccountBalance(props) {\n  const [currentDate, setCurrentDate] = useState(\"\");\n\n  useEffect(() => {\n    props.actions.getTotalBalance();\n\n    // Güncel tarih\n    const now = new Date();\n    const formattedDate = `${now.getDate()} ${now.toLocaleString('default', { month: 'long' })}, ${now.getFullYear()}`;\n    setCurrentDate(formattedDate);\n  }, [props.actions]);\n\n  return (\n    <React.Fragment >\n      <Title>Total Account Balance</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        {props.totalBalance}\n      </Typography>\n      <Typography color=\"text.secondary\" sx={{ flex: 1 }}>\n        on {currentDate}\n      </Typography>\n      <div>\n        <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n          View balance\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: {\n      getTotalBalance: bindActionCreators(accountActions.getTotalBalance, dispatch)\n    },\n  };\n}\n\nfunction mapStateToProps(state) {\n  return {\n    totalBalance: state.totalBalanceReducer,\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TotalAccountBalance);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}